# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    - go mod tidy
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
    main: ./cmd/imgpkg
    binary: imgpkg-{{ .Os }}-{{ .Arch }}

    flags:
      - -trimpath

    ldflags:
      - -buildid=
      - -X github.com/k14s/imgpkg/pkg/imgpkg/cmd.Version={{ .Version }}

archives:
  - format: binary
    name_template: "{{ .Binary }}"
    replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      amd64: x86_64
  - id: imgpkg-zip
    format: zip
    files:
      - none*
    replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      amd64: x86_64
checksum:
  name_template: 'checksums.txt'
  algorithm: sha256
  disable: false
snapshot:
  name_template: "{{ .Tag }}-next"
release:
  # Repo in which the release will be created.
  github:
    owner: vmware-tanzu
    name: carvel-imgpkg

  # If set to true, will not auto-publish the release.
  draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # use to change the name of the release.
  name_template: "{{.Tag}}"

  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  disable: false

changelog:
  # Set it to true if you wish to skip the changelog generation.
  # This may result in an empty release notes on GitHub/GitLab/Gitea.
  skip: false

  # Sorts the changelog by the commit's messages.
  # Could either be asc, desc or empty
  # Default is empty
  sort: asc

  filters:
    # Commit messages matching the regexp listed here will be removed from
    # the changelog
    # Default is empty
    exclude:
      - '^docs:'
      - typo
brews:
  -
    # Name template of the recipe
    # Default to project name
    name: imgpkg

    # IDs of the archives to use.
    # Defaults to all.
    ids:
      - imgpkg-zip

    tap:
      owner: vmware-tanzu
      name: carvel-imgpkg

    # Template for the url which is determined by the given Token (github or gitlab)
    # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    # url_template: "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # Default is empty.
    # download_strategy: CurlDownloadStrategy

    # Allows you to add a custom require_relative at the top of the formula template
    # Default is empty
    custom_require: ""

    # Git author used to commit to the repository.
    commit_author:
      name: goreleaserbot
      email: carvel@vmware.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    caveats: ""

    # Your app's homepage.
    # Default is empty.
    homepage: "https://carvel.dev/imgpkg/"

    # Template of your app's description.
    # Default is empty.
    description: "Imgpkg"

    # SPDX identifier of your app's license.
    # Default is empty.
    license: ""

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # Default is empty.
    custom_block: ""

    # Packages your package depends on.
    dependencies: []

    # Packages that conflict with your package.
    conflicts: []

    # Specify for packages that run as a service.
    # Default is empty.
    plist: ""

    # So you can `brew test` your formula.
    # Default is empty.
    test: |
      system "#{bin}/imgpkg", "version"

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    install: |
      system "mv imgpkg-* imgpkg"
      bin.install "imgpkg"

    # Custom post_install script for brew.
    # Could be used to do any additional work after the "install" script
    # Default is empty.
    post_install: ""